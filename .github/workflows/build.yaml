name: Build One
permissions:
  contents: write
on:
  workflow_call:
    inputs: 
      runner:
        type: string
        description: '运行器'
        required: true
        default: 'ubuntu-24.04'
      arch:
        type: string
        description: '架构'
        required: true
        default: 'amd64'
      max-tasks:
        type: number
        description: '最大任务数'
        required: false
        default: 10
      debug:
        type: boolean
        description: '启用调试'
        required: false
        default: ${{fromJSON(vars.ENABLE_DEBUG||'false')}}
      max-parallel:
        type: number
        description: '最大并行数'
        required: false
        default: ${{fromJSON(vars.MAX_PARALLEL||'64')}}
    secrets:
      FTP_URL: 
        description: 'FTP地址'
      SSH_URL: 
        description: 'SSH地址'
      SSH_HOST_KEY:
        description: 'SSH服务器公钥'
      SSH_PRIVATE_KEY:
        description: 'SSH客户端私钥'
      CF_PROXY:
        description: 'CF代理'
  workflow_dispatch: 
    inputs:
      runner:
        type: string
        description: '运行器'
        required: true
        default: 'ubuntu-24.04'
      arch:
        type: string
        description: '架构'
        required: true
        default: 'amd64'
      max-tasks:
        type: number
        description: '最大任务数'
        required: false
        default: 10
      debug:
        type: boolean
        description: '启用调试'
        required: false
        default: false
      max-parallel:
        type: number
        description: '最大并行数'
        required: false
        default: 100
  
jobs:
  list:
    runs-on: ${{inputs.runner}}
    outputs:
      tasks: ${{steps.check.outputs.TASKS}}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Check
        id: check
        run: |
          git submodule update --init --remote
          make tasks MAX_TASKS=${{inputs.max-tasks}}
          echo "TASKS<<EOF" >> "$GITHUB_OUTPUT"
          cat "tasks.json" >> "$GITHUB_OUTPUT"
          echo "EOF" >> "$GITHUB_OUTPUT"
        env:
          ARCH: ${{inputs.arch}}
  build:
    needs: list
    if: ${{needs.list.outputs.tasks!=''&&needs.list.outputs.tasks!='[]'}}
    strategy:
      max-parallel: ${{inputs.max-parallel}}
      matrix:
        pkg-id: ${{fromJson(needs.list.outputs.tasks)}}
      fail-fast: false
    uses: ./.github/workflows/build-sandbox.yaml
    with:
      arch: ${{inputs.arch}}
      runner: ${{inputs.runner}}
      debug: ${{inputs.debug}}
      pkg-id: ${{matrix.pkg-id}}
    secrets:
      FTP_URL: ${{secrets.FTP_URL}}
      SSH_URL: ${{secrets.SSH_URL}}
      SSH_HOST_KEY: ${{secrets.SSH_HOST_KEY}}
      SSH_PRIVATE_KEY: ${{secrets.SSH_PRIVATE_KEY}}
      CF_PROXY: ${{secrets.CF_PROXY}}